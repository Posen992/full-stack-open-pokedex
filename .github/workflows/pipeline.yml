# name: Deployment pipeline

# on:
#   push:
#     branches:
#       - '*'
#   pull_request:
#     branches: [main]
#     types: [opened, synchronize]

# jobs:
#   simple_deployment_pipeline:
#     runs-on: ubuntu-20.04
#     steps:
#       - uses: actions/checkout@v4
#       - uses: actions/setup-node@v4
#         with:
#           node-version: '20'
#       - name: Install dependencies
#         run: npm ci
#       - name: Check style - eslint
#         run: npm run eslint
#       - name: Install Playwright Browsers
#         run: npx playwright install --with-deps
#       - name: Run Playwright tests
#         run: npx playwright test
#       - name: Build
#         run: npm run build
#       - name: Test
#         run: npm run test:e2e
#       - name: Trigger deployment
#         if: ${{ github.event_name == 'pull_request' }}
#         run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}
#       - name: Check Health
#         if: ${{ github.event_name == 'pull_request' }}
#         run: curl https://full-stack-open-pokedex-urty.onrender.com/health

#   tag_release:
#     needs: [simple_deployment_pipeline]
#     runs-on: ubuntu-20.04
#     steps:
#       - name: Bump version and push tag
#         if: ${{ github.ref == 'refs/heads/main' }}
#         uses: anothrNick/github-tag-action@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           DEFAULT_BUMP: patch

name: Testing stuff

on:
  push:
    branches:
      - '*'

jobs:
  a_test_job:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: commits
        env:
          COMMITS: ${{ toJson(github.event.commits) }}
        run: echo "$COMMITS"
      - name: commit messages
        env:
          COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}
        if: ${{ contains('#skip',toJson(github.event.commits.*.message) )}}
        run: echo "$COMMIT_MESSAGES"
        
